{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/ExperienceContainer/ExperienceContainer.js","components/Experiences/Experience.js","components/Skills/Skills.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","components/Footer/Footer.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","themeName","setThemeName","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","Provider","value","toggleTheme","name","localStorage","setItem","header","about","linkedin","github","experiences","description","subdescription","projects","stack","sourceCode","livePreview","skills","contact","Navbar","useContext","showNavList","setShowNavList","toggleNavList","className","style","display","length","href","onClick","type","Header","homepage","title","About","role","resume","social","ProjectContainer","project","map","item","uniqid","Projects","id","ExperienceContainer","experience","Experiences","Skills","skill","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","removeEventListener","fontSize","Contact","Footer","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e772553.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ThemeContext = createContext()\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [themeName, setThemeName] = useState('light')\r\n\r\n  useEffect(() => {\r\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: light)');\r\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\r\n    darkMediaQuery.addEventListener('change', (e) => {\r\n      setThemeName(e.matches ? 'dark' : 'light')\r\n    });\r\n  }, [])\r\n\r\n  const toggleTheme = () => {\r\n    const name = themeName === 'dark' ? 'light' : 'dark'\r\n    localStorage.setItem('themeName', name)\r\n    setThemeName(name)\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nThemeProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport { ThemeProvider, ThemeContext }\r\n","const header = {\r\n  homepage: 'https://lgtdlr.github.io/portfolio',\r\n  title: 'LT.',\r\n}\r\n\r\nconst about = {\r\n  name: 'Leonardo Torres',\r\n  role: 'Computer Engineer Undergraduate Student',\r\n  description:\r\n    'With a passion for learning, designing, and developing, I thrive to build the skill sets and the professional background necessary to dive deep into the engineering world. ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ On the software side, I have developed as full-stack skills through personal projects, hackathons, and internships where I worked on designing databases, the backend and the frontend. I am confident problem-solving, transitioning between different programming languages, and learning and using new technologies. I have strong troubleshooting and debugging skills, and I am drawn to the areas of Software Engineering, Full-stack Engineering, DevOps Engineering, Cybersecurity, and Networking. ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ In the hardware area, I have built an understanding of circuit design and analysis, electronics, programming microcontrollers, and synthesizing FPGAs.',\r\n  resume: 'https://9f7245c2-4419-47d7-9dae-644554fc5839.filesusr.com/ugd/b3f117_195108486b6640a899d2c03a24a98367.pdf',\r\n  social: {\r\n    linkedin: 'https://www.linkedin.com/in/leonardo-torres-de-la-rosa/',\r\n    github: 'https://github.com/lgtdlr',\r\n  },\r\n}\r\n\r\nconst experiences = [\r\n  {\r\n    name: 'JPMorgan Chase & Co.',\r\n    description:\r\n      'Deployed a full-stack web-based merchant dashboard supplying key transaction metrics in near real time to premier Chase clients.',\r\n    subdescription: ['Software Engineer Intern', 'June 2022 - August 2022'],\r\n  },\r\n  {\r\n    name: 'AbbVie Biotechnology',\r\n    description:\r\n      'Designed testing procedures for Filter Integrity Testing in the Small Volume Parenteral area and programmed it in the MES. Deployed various business application.',\r\n      subdescription: ['Engineering COOP', 'January 2022 - May 2022'],\r\n  },\r\n  {\r\n    name: 'Verizon',\r\n    description:\r\n      'Built a proof of concept full-stack standardized service for adding and generating GIS map layers to the company\\'s network planning platform with an automated workflow. ',\r\n      subdescription: ['Software Developer Intern', 'June 2021 - August 2021'],\r\n  },\r\n  {\r\n    name: 'Verizon',\r\n    description:\r\n      'Built a COVID purpose Android app that implemented various facial analytical features such as sentiment analysis, object detection, and temperature measurement.',\r\n      subdescription: ['Technology Intern', 'June 2020 - August 2020'],\r\n  },\r\n  {\r\n    name: 'Department of Defense',\r\n    description:\r\n      'Created testing procedures and updated technical documentation. Led OS Software Testing for various laptops and co-led inspection and testing of Input-Output Modules.',\r\n      subdescription: ['Engineering COOP', 'January 2020 - May 2020'],\r\n  },\r\n]\r\n\r\nconst projects = [\r\n  {\r\n    name: 'Booking System',\r\n    description:\r\n      'Full-stack course project where users can register, login, book rooms for events, and set their availability.',\r\n    stack: ['TypeScript', 'React', 'PostgreSQL', 'Flask'],\r\n    sourceCode: 'https://github.com/lgtdlr/Booking-System',\r\n    livePreview: 'https://github.com/lgtdlr/Booking-System',\r\n  },\r\n  {\r\n    name: 'Transactions Dashboard',\r\n    description:\r\n      'Dashboard where users can see their daily, monthly and yearly total income that was received through ATH Movil.',\r\n    stack: ['TypeScript', 'React', 'PostgreSQL', 'Flask'],\r\n    sourceCode: 'https://github.com/lgtdlr/Codfish',\r\n    livePreview: 'https://github.com/lgtdlr/Codfish',\r\n  },\r\n  {\r\n    name: 'Game Catalog (in-progress)',\r\n    description:\r\n      'Full-stack project of a Steam mock for practicing new tech stack.',\r\n    stack: ['Tailwind CSS', 'TypeScript', 'Angular', 'Spring Boot', 'Elasticsearch'],\r\n    sourceCode: 'https://github.com/lgtdlr/Staem',\r\n    livePreview: 'https://github.com/lgtdlr/Staem',\r\n  },\r\n  {\r\n    name: 'DinnerDash',\r\n    description:\r\n      'Dinner Dash Java Game project for Advanced Programming Course.',\r\n    stack: ['Java'],\r\n    sourceCode: 'https://github.com/lgtdlr/DinnerDash',\r\n    livePreview: 'https://github.com/lgtdlr/DinnerDash',\r\n  },\r\n  {\r\n    name: 'Java Snake',\r\n    description:\r\n      'Snake Java game project for Advanced Programming Course.',\r\n    stack: ['Java'],\r\n    sourceCode: 'https://github.com/lgtdlr/Snake',\r\n    livePreview: 'https://github.com/lgtdlr/Snake',\r\n  },\r\n]\r\n\r\nconst skills = [\r\n  \r\n  'TypeScript',\r\n  'Python',\r\n  'Java',\r\n  'C++',\r\n  'React',\r\n  'SASS',\r\n  'Material UI',\r\n  'JWT',\r\n  'Git',\r\n  'Angular',\r\n  'Postman',\r\n  'PostgreSQL',\r\n  'Oracle SQL',\r\n  'Android',\r\n  'Flask',\r\n  'Spring Boot',\r\n  'Elasticsearch',\r\n  'Docker',\r\n  'HTML',\r\n  'CSS',\r\n  'JavaScript',\r\n]\r\n\r\nconst contact = {\r\n  email: 'leonardo.torres5@upr.edu',\r\n}\r\n\r\nexport { header, about, experiences, projects, skills, contact }\r\n","import { useContext, useState } from 'react'\r\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\r\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { ThemeContext } from '../../contexts/theme'\r\nimport { projects, skills, contact, experiences } from '../../portfolio'\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\r\n  const [showNavList, setShowNavList] = useState(false)\r\n\r\n  const toggleNavList = () => setShowNavList(!showNavList)\r\n\r\n  return (\r\n    <nav className='center nav'>\r\n      <ul\r\n        style={{ display: showNavList ? 'flex' : null }}\r\n        className='nav__list'\r\n      >\r\n\r\n        {experiences.length ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#experience'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              Experience\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n\r\n        {projects.length ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#projects'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              Projects\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n\r\n        {skills.length ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#skills'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              Skills\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n\r\n        {contact.email ? (\r\n          <li className='nav__list-item'>\r\n            <a\r\n              href='#contact'\r\n              onClick={toggleNavList}\r\n              className='link link--nav'\r\n            >\r\n              Contact\r\n            </a>\r\n          </li>\r\n        ) : null}\r\n      </ul>\r\n\r\n      <button\r\n        type='button'\r\n        onClick={toggleTheme}\r\n        className='btn btn--icon nav__theme'\r\n        aria-label='toggle theme'\r\n      >\r\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\r\n      </button>\r\n\r\n      <button\r\n        type='button'\r\n        onClick={toggleNavList}\r\n        className='btn btn--icon nav__hamburger'\r\n        aria-label='toggle navigation'\r\n      >\r\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\r\n      </button>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { header } from '../../portfolio'\r\nimport Navbar from '../Navbar/Navbar'\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n  const { homepage, title } = header\r\n\r\n  return (\r\n    <header className='header center'>\r\n      <h3>\r\n        {homepage ? (\r\n          <a href={homepage} className='link'>\r\n            {title}\r\n          </a>\r\n        ) : (\r\n          title\r\n        )}\r\n      </h3>\r\n      <Navbar />\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import GitHubIcon from '@material-ui/icons/GitHub'\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\r\nimport { about } from '../../portfolio'\r\nimport './About.css'\r\n\r\nconst About = () => {\r\n  const { name, role, description, resume, social } = about\r\n\r\n  return (\r\n    <div className='about center'>\r\n      {name && (\r\n        <h1>\r\n          Hi, I am <span className='about__name'>{name}.</span>\r\n        </h1>\r\n      )}\r\n\r\n      {role && <h2 className='about__role'>A {role}.</h2>}\r\n      <p className='about__desc'>{description && description}</p>\r\n\r\n      <div className='about__contact center'>\r\n        {resume && (\r\n          <a href={resume}>\r\n            <span type='button' className='btn btn--outline'>\r\n              Resume\r\n            </span>\r\n          </a>\r\n        )}\r\n      </div>\r\n      <div className='about__contact center'>\r\n      {social && (\r\n          <>\r\n            {social.linkedin && (\r\n              <a\r\n                href={social.linkedin}\r\n                aria-label='linkedin'\r\n                className='link link--icon'\r\n              >\r\n                <LinkedInIcon />\r\n              </a>\r\n            )}\r\n\r\n            {social.github && (\r\n              <a\r\n                href={social.github}\r\n                aria-label='github'\r\n                className='link link--icon'\r\n              >\r\n                <GitHubIcon />\r\n              </a>\r\n            )}\r\n\r\n            \r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import uniqid from 'uniqid'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport LaunchIcon from '@material-ui/icons/Launch'\r\nimport './ProjectContainer.css'\r\n\r\nconst ProjectContainer = ({ project }) => (\r\n  <div className='project'>\r\n    <h3>{project.name}</h3>\r\n\r\n    <p className='project__description'>{project.description}</p>\r\n    {project.stack && (\r\n      <ul className='project__stack'>\r\n        {project.stack.map((item) => (\r\n          <li key={uniqid()} className='project__stack-item'>\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )}\r\n\r\n    {project.sourceCode && (\r\n      <a\r\n        href={project.sourceCode}\r\n        aria-label='source code'\r\n        className='link link--icon'\r\n      >\r\n        <GitHubIcon />\r\n      </a>\r\n    )}\r\n\r\n    {project.livePreview && (\r\n      <a\r\n        href={project.livePreview}\r\n        aria-label='live preview'\r\n        className='link link--icon'\r\n      >\r\n        <LaunchIcon />\r\n      </a>\r\n    )}\r\n  </div>\r\n)\r\n\r\nexport default ProjectContainer\r\n","import uniqid from 'uniqid'\r\nimport { projects } from '../../portfolio'\r\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\r\nimport './Projects.css'\r\n\r\nconst Projects = () => {\r\n  if (!projects.length) return null\r\n\r\n  return (\r\n    <section id='projects' className='section projects'>\r\n      <h2 className='section__title'>Projects</h2>\r\n\r\n      <div className='projects__grid'>\r\n        {projects.map((project) => (\r\n          <ProjectContainer key={uniqid()} project={project} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import uniqid from 'uniqid'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport LaunchIcon from '@material-ui/icons/Launch'\r\nimport './ExperienceContainer.css'\r\n\r\nconst ExperienceContainer = ({ experience }) => (\r\n  <div className='experience'>\r\n    <h3>{experience.name}</h3>\r\n\r\n    <p className='experience__description'>{experience.description}</p>\r\n    {experience.subdescription && (\r\n      <ul className='experience__subdescription'>\r\n        {experience.subdescription.map((item) => (\r\n          <li key={uniqid()} className='experience__subdescription-item'>\r\n            {item}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )}\r\n\r\n    {experience.sourceCode && (\r\n      <a\r\n        href={experience.sourceCode}\r\n        aria-label='source code'\r\n        className='link link--icon'\r\n      >\r\n        <GitHubIcon />\r\n      </a>\r\n    )}\r\n\r\n    {experience.livePreview && (\r\n      <a\r\n        href={experience.livePreview}\r\n        aria-label='live preview'\r\n        className='link link--icon'\r\n      >\r\n        <LaunchIcon />\r\n      </a>\r\n    )}\r\n  </div>\r\n)\r\n\r\nexport default ExperienceContainer\r\n","import uniqid from 'uniqid'\r\nimport { experiences } from '../../portfolio'\r\nimport ExperienceContainer from '../ExperienceContainer/ExperienceContainer'\r\nimport './Experience.css'\r\n\r\nconst Experiences = () => {\r\n  if (!experiences.length) return null\r\n\r\n  return (\r\n    <section id='experience' className='section experiences'>\r\n      <h2 className='section__title'>Experience</h2>\r\n\r\n      <div className='experience__grid'>\r\n        {experiences.map((experience) => (\r\n          <ExperienceContainer key={uniqid()} experience={experience} />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Experiences\r\n","import uniqid from 'uniqid'\r\nimport { skills } from '../../portfolio'\r\nimport './Skills.css'\r\n\r\nconst Skills = () => {\r\n  if (!skills.length) return null\r\n\r\n  return (\r\n    <section className='section skills' id='skills'>\r\n      <h2 className='section__title'>Skills</h2>\r\n      <ul className='skills__list'>\r\n        {skills.map((skill) => (\r\n          <li key={uniqid()} className='skills__list-item btn btn--plain'>\r\n            {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n","import React, { useEffect, useState } from 'react'\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\r\nimport './ScrollToTop.css'\r\n\r\nconst ScrollToTop = () => {\r\n  const [isVisible, setIsVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const toggleVisibility = () =>\r\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\r\n\r\n    window.addEventListener('scroll', toggleVisibility)\r\n    return () => window.removeEventListener('scroll', toggleVisibility)\r\n  }, [])\r\n\r\n  return isVisible ? (\r\n    <div className='scroll-top'>\r\n      <a href='#top'>\r\n        <ArrowUpwardIcon fontSize='large' />\r\n      </a>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport default ScrollToTop\r\n","import { contact } from '../../portfolio'\r\nimport './Contact.css'\r\n\r\nconst Contact = () => {\r\n  if (!contact.email) return null\r\n\r\n  return (\r\n    <section className='section contact center' id='contact'>\r\n      <h2 className='section__title'>Contact</h2>\r\n      <a href={`mailto:${contact.email}`}>\r\n        <span type='button' className='btn btn--outline'>\r\n          Email me\r\n        </span>\r\n      </a>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import './Footer.css'\r\n\r\nconst Footer = () => (\r\n  <footer className='footer'>\r\n    <a\r\n      href='https://github.com/lgtdlr/portfolio'\r\n      className='link footer__link'\r\n    >\r\n      Source\r\n    </a>\r\n  </footer>\r\n)\r\n\r\nexport default Footer\r\n","import { useContext } from 'react'\r\nimport { ThemeContext } from './contexts/theme'\r\nimport Header from './components/Header/Header'\r\nimport About from './components/About/About'\r\nimport Projects from './components/Projects/Projects'\r\nimport Experience from './components/Experiences/Experience'\r\nimport Skills from './components/Skills/Skills'\r\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\r\nimport Contact from './components/Contact/Contact'\r\nimport Footer from './components/Footer/Footer'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const [{ themeName }] = useContext(ThemeContext)\r\n\r\n  return (\r\n    <div id='top' className={`${themeName} app`}>\r\n      <Header />\r\n\r\n      <main>\r\n        <About />\r\n        <Experience />\r\n        <Projects />\r\n        <Skills />\r\n        <Contact />\r\n      </main>\r\n\r\n      <ScrollToTop />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { render } from 'react-dom'\r\nimport App from './App'\r\nimport { ThemeProvider } from './contexts/theme'\r\nimport './index.css'\r\n\r\nrender(\r\n  <ThemeProvider>\r\n    <App />\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}